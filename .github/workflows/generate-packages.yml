name: Download Packages

on:
  pull_request:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  PI_TOP_OS_URL: "https://storage.googleapis.com/pt-os-release/pi-topOS-bullseye/pi-topOS_bullseye_release_armhf_2023-05-23_B25.zip"
  MOUNT_POINT: "/tmp/pi-top-os"
  PACKAGES_FOLDER: "packages"

jobs:
  download-packages:
    runs-on: ubuntu-20.04
    steps:
      - name: GitHub Environment Variables Action
        uses: FranzDiebold/github-env-vars-action@v2.7.0

      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install dependencies
        run: |
          sudo apt-get update && sudo apt-get install -y \
            systemd-container \
            qemu-user-static \
            kpartx

      - name: Get pi-topOS image filename
        run: |
          echo "IMAGE_FILE=$(basename ${{ env.PI_TOP_OS_URL }} | cut -d'.' -f1).img" >> $GITHUB_ENV

      - name: Restore cached pi-topOS image
        id: pi-top-os-image-restore
        uses: actions/cache/restore@v3
        with:
          path: |
            ${{ env.IMAGE_FILE }}
          key: ${{ runner.os }}-image

      - name: Download pi-topOS image
        if: steps.pi-top-os-image-restore.outputs.cache-hit != 'true'
        run: |
          wget "${{ env.PI_TOP_OS_URL }}" -O pi-topOS.zip
          unzip pi-topOS.zip

      - name: Cache pi-topOS image
        id: pi-top-os-image-save
        if: steps.pi-top-os-image-restore.outputs.cache-hit != 'true'
        uses: actions/cache/save@v3
        with:
          path: |
            ${{ env.IMAGE_FILE }}
          key: ${{ steps.pi-top-os-image-restore.outputs.cache-primary-key }}

      - name: Restore cached debs
        id: packages-restore
        uses: actions/cache/restore@v3
        with:
          path: |
            packages.tar.gz
          key: ${{ runner.os }}-packages-tar

      - name: Extract cached debs
        if: steps.packages-restore.outputs.cache-hit == 'true'
        run: |
          ls
          tar -xf packages.tar.gz
          ls -lh "${{ env.PACKAGES_FOLDER }}"

      - name: Mount OS Image root partition
        uses: jcapona/mount-image-partition-action@v0.2
        with:
          imagePath: ${{ env.IMAGE_FILE }}
          mountPoint: ${{ env.MOUNT_POINT }}
          partitionIndex: 3
          filesystem: ext4

      - name: Update pi-topOS container and download packages
        run: |
          sudo systemd-nspawn --pipe --bind "$PWD":/packages  -D "${{ env.MOUNT_POINT }}" /bin/bash << EOF
            apt update
            apt dist-upgrade -y
            cd /packages
            ls -lh
            bash ./download-packages.sh
          EOF

      - name: List packages
        run: |
          ls -lh "${{ env.PACKAGES_FOLDER }}"

      - name: Cache downloaded debs
        id: packages-save
        uses: actions/cache/save@v3
        with:
          path: |
            packages.tar.gz
          key: ${{ steps.packages-restore.outputs.cache-primary-key }}

      - name: Upload set of packages
        uses: actions/upload-artifact@v2
        with:
          name: packages
          path: "packages.tar.gz"
